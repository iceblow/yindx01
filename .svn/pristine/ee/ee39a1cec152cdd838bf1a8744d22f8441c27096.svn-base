<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uncleserver.dao.AuntLevelSetMapper" >
  <resultMap id="BaseResultMap" type="com.uncleserver.model.AuntLevelSet" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, level, point, title, addtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_aunt_level_set
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="setlectSetByLevel" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_aunt_level_set
    where level = #{0}
  </select>
  <select id="setlectSetByPoint" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_aunt_level_set
    where point <![CDATA[ <= #{0}]]> order by point desc limit 0,1
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_aunt_level_set
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uncleserver.model.AuntLevelSet" >
    insert into t_aunt_level_set (id, level, point, 
      title, addtime)
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=TINYINT}, #{point,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.uncleserver.model.AuntLevelSet" >
    insert into t_aunt_level_set
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uncleserver.model.AuntLevelSet" >
    update t_aunt_level_set
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uncleserver.model.AuntLevelSet" >
    update t_aunt_level_set
    set level = #{level,jdbcType=TINYINT},
      point = #{point,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAllLevelSet" resultMap="BaseResultMap">
  	select 
   	 	<include refid="Base_Column_List" />
    from t_aunt_level_set
  </select>
  <select id="getCount" resultType="long">
  	SELECT
 		COUNT(*)
	FROM
		t_aunt_level_set
  </select>
</mapper>