<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uncleserver.dao.ConfigMapper" >
  <resultMap id="BaseResultMap" type="com.uncleserver.model.Config" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="keyname" property="keyname" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.uncleserver.model.Config" extends="BaseResultMap" >
    <result column="configvalue" property="configvalue" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, keyname, addtime
  </sql>
  <sql id="Blob_Column_List" >
    configvalue
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectConfigByKey" resultMap="ResultMapWithBLOBs" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_config
    where keyname = #{0}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uncleserver.model.Config" >
    insert into t_config (id, keyname, addtime, 
      configvalue)
    values (#{id,jdbcType=INTEGER}, #{keyname,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, 
      #{configvalue,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uncleserver.model.Config" >
    insert into t_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="keyname != null" >
        keyname,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="configvalue != null" >
        configvalue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="keyname != null" >
        #{keyname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="configvalue != null" >
        #{configvalue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uncleserver.model.Config" >
    update t_config
    <set >
      <if test="keyname != null" >
        keyname = #{keyname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="configvalue != null" >
        configvalue = #{configvalue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uncleserver.model.Config" >
    update t_config
    set keyname = #{keyname,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      configvalue = #{configvalue,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uncleserver.model.Config" >
    update t_config
    set keyname = #{keyname,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getConfigs" resultMap="BaseResultMap">
  	SELECT
		t_config.id,
		t_config.keyname,
		t_config.configvalue,
		t_config.addtime
	FROM
		t_config
  </select>
  
  <select id="getCount" resultType="long">
  select count(*) from t_config
  </select>
</mapper>