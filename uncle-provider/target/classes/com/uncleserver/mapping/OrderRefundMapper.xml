<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uncleserver.dao.OrderRefundMapper" >
  <resultMap id="BaseResultMap" type="com.uncleserver.model.OrderRefund" >
    <id column="dataid" property="dataid" jdbcType="INTEGER" />
    <result column="ordernum" property="ordernum" jdbcType="VARCHAR" />
    <result column="orderid" property="orderid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="third_orderid" property="thirdOrderid" jdbcType="VARCHAR" />
    <result column="pay_account_info" property="payAccountInfo" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pirce" property="pirce" jdbcType="DECIMAL" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="orderpayid" property="orderpayid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    dataid, ordernum, orderid, type, state, pay_type, third_orderid, pay_account_info, 
    pay_time, pirce, addtime, orderpayid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order_refund
    where dataid = #{dataid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order_refund
    where dataid = #{dataid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uncleserver.model.OrderRefund" >
   <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="dataid">
	SELECT LAST_INSERT_ID() AS dataid
  </selectKey>
    insert into t_order_refund (dataid, ordernum, orderid, 
      type, state, pay_type, 
      third_orderid, pay_account_info, pay_time, 
      pirce, addtime, orderpayid
      )
    values (#{dataid,jdbcType=INTEGER}, #{ordernum,jdbcType=VARCHAR}, #{orderid,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, #{payType,jdbcType=TINYINT}, 
      #{thirdOrderid,jdbcType=VARCHAR}, #{payAccountInfo,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, 
      #{pirce,jdbcType=DECIMAL}, #{addtime,jdbcType=TIMESTAMP}, #{orderpayid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uncleserver.model.OrderRefund" >
   <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="dataid">
	SELECT LAST_INSERT_ID() AS dataid
  </selectKey>
    insert into t_order_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataid != null" >
        dataid,
      </if>
      <if test="ordernum != null" >
        ordernum,
      </if>
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="thirdOrderid != null" >
        third_orderid,
      </if>
      <if test="payAccountInfo != null" >
        pay_account_info,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="pirce != null" >
        pirce,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="orderpayid != null" >
        orderpayid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataid != null" >
        #{dataid,jdbcType=INTEGER},
      </if>
      <if test="ordernum != null" >
        #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="thirdOrderid != null" >
        #{thirdOrderid,jdbcType=VARCHAR},
      </if>
      <if test="payAccountInfo != null" >
        #{payAccountInfo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pirce != null" >
        #{pirce,jdbcType=DECIMAL},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderpayid != null" >
        #{orderpayid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uncleserver.model.OrderRefund" >
    update t_order_refund
    <set >
      <if test="ordernum != null" >
        ordernum = #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        orderid = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="thirdOrderid != null" >
        third_orderid = #{thirdOrderid,jdbcType=VARCHAR},
      </if>
      <if test="payAccountInfo != null" >
        pay_account_info = #{payAccountInfo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pirce != null" >
        pirce = #{pirce,jdbcType=DECIMAL},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderpayid != null" >
        orderpayid = #{orderpayid,jdbcType=INTEGER},
      </if>
    </set>
    where dataid = #{dataid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uncleserver.model.OrderRefund" >
    update t_order_refund
    set ordernum = #{ordernum,jdbcType=VARCHAR},
      orderid = #{orderid,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      pay_type = #{payType,jdbcType=TINYINT},
      third_orderid = #{thirdOrderid,jdbcType=VARCHAR},
      pay_account_info = #{payAccountInfo,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pirce = #{pirce,jdbcType=DECIMAL},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      orderpayid = #{orderpayid,jdbcType=INTEGER}
    where dataid = #{dataid,jdbcType=INTEGER}
  </update>
  
  <select id="selectOrderRefundCount" resultType="java.lang.Long" >
    select count(1)
    from t_order_refund
    where <![CDATA[ TIMESTAMPDIFF(HOUR,DATE_FORMAT(addtime,"%Y-%m-%d %h"),DATE_FORMAT(now(),"%Y-%m-%d %h")) = 0 ]]> 
  </select>
  
   <select id="selectByOrderNum" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_order_refund
    where ordernum = #{ordernum,jdbcType=VARCHAR}
  </select>
</mapper>